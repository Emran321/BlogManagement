@model BlogManagement.PostServices.PostServiceViewModel

@{
    var message = TempData["successMessage"];
    ViewBag.Title = "Blog List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm("Index", "Post", FormMethod.Post, new { id = "blogFormId", @class = "formValidator" }))
{
    <section class="content">
        <div class="row">
            <div class="col-md-3">
                <div class="box">

                    <div class="box-danger">

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="box-header">
                            <h4>Add Blog</h4>
                        </div>

                        <div class="box-body">
                            @Html.HiddenFor(model => model.PostId, new { id = "postId" })
                            @Html.HiddenFor(model => model.ActionId, new { id = "ActionId" })


                            <div class="row">
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Title :</label>
                                    @Html.TextBoxFor(model => model.Title, new { Style = "width:100%;", id = "txtName", @class = "form-control input-sm ", @placeholder = "Short Name", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Content :</label>
                                    @Html.TextBoxFor(model => model.Content, new { Style = "width:100%;", id = "txtShortName", @class = "form-control input-sm ", @placeholder = "Short Name", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group" style="padding:0px">
                                    <label for="message-text" class="col-form-label">Author :</label>
                                    @Html.TextBoxFor(model => model.Author, new { Style = "width:100%;", id = "txtCode", @class = "form-control input-sm ", @placeholder = "Code", required = "true" })
                                    @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group text-center">
                                    <!-- Adding 'text-center' class to center the content -->
                                    <div class="col-md-7 mt-3">
                                        <!-- Adding 'mt-3' class for top margin -->
                                        <button type="submit" id="btnSave" class="btn btn-primary btn-block"><i class='fa fa-edit'></i> Add</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Modal -->
                        <div class="modal fade" id="detailsModal" tabindex="-1" role="dialog" aria-labelledby="detailsModalLabel" aria-hidden="true">
                            <div class="modal-dialog" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="detailsModalLabel">Details</h5>
                                        <button type="button" class="close" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body" id="detailsContent">
                                        <!-- Details content will be loaded here -->
                                    </div>
                                </div>
                            </div>
                        </div>



                        <div class="box-footer">
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-9">
                <div class="box">
                    <div class="box-danger">
                        <div class="box-header">
                            <h4>Blog List</h4>
                        </div>
                        <div class="box-body">
                            <div class="table-responsive">
                                <table id="tesDataTable" style="width:100%;" class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>SL</th>
                                            <th>Title</th>
                                            <th>Content</th>
                                            <th>Author</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    @{int sl = 0;
                                    }
                                    <tbody>
                                        @foreach (var item in Model.BlogList)
                                        {
                                            <tr>
                                                <td style="width:10px;">
                                                    @(++sl)
                                                </td>
                                                <td id="tdName_@item.PostId">@item.Title</td>
                                                <td id="tdShortName_@item.PostId">@item.Content</td>
                                                <td id="tdCode_@item.PostId">@item.Author</td>
                                                <td>

                                                    <a id="@item.PostId" onclick="makeEditble(this);" class="linkPointer" title="Edit">Edit</a>
                                                    @Html.ActionLink("Delete", "Delete", new { id = item.PostId }, new { onclick = "return confirm('Are you sure you want to delete this?')" })
                                                    <a href="#" class="details-btn" data-id="1">Details</a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>

                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </section>
}



@section Scripts {

    <script type="text/javascript">

        function makeEditble(elem) {
            if (elem !== null) {
                var rowId = elem.id;
                $('#postId').val(rowId);
                $('#ActionId').val(2);
                $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Update");
                $('#txtCode').val($('#tdCode_' + rowId).text().trim());
                $('#txtName').val($('#tdName_' + rowId).text().trim());
                $('#txtShortName').val($('#tdShortName_' + rowId).text().trim());

                window.scrollTo({ top: 0, behavior: 'smooth' });

            }
        }


        $(document).ready(function () {
            $('.delete-link').on('click', function (e) {
                e.preventDefault();
                var deleteLink = $(this).attr('href');

                if (confirm('Are you sure you want to delete this?')) {
                    $.ajax({
                        url: deleteLink,
                        method: 'POST',
                        success: function (response) {
                            $(this).closest('.post-item').remove();
                        },
                        error: function (error) {
                            console.error('Error deleting:', error);
                        }
                    });
                }
            });
        });


        $(document).ready(function () {
            $('body').on('click', '.details-btn', function (e) {
                e.preventDefault();
                var id = $(this).data('id');
                $.ajax({
                    type: "GET",
                    url: "/Post/Details/" + id,
                    success: function (data) {
                        $('#detailsContent').html(data);
                        $('#detailsModal').modal('show');
                    },
                    error: function () {
                        // Handle error, if any
                    }
                });
            });

            // Manually close the modal when the close button inside the modal header is clicked
            $('#detailsModal').on('click', '.modal-header .close', function () {
                $('#detailsModal').modal('hide');
            });
        });

        //function resetForm() {
        //    $('#blogFormId')[0].reset();
        //    $('#btnSave').html("<i class='fa fa-edit'></i>&nbsp;Add");

        //}

        $(document).ready(function () {
            $('#tesDataTable').DataTable({
                "paging": true,
                "ordering": true,
                "info": true,
                order: [[0, 'desc']],
            });
        });
    </script>
}








